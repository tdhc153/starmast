{
  "hash": "83fa4305c37e2b105fcbdf3a9d8d7c6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Factsheet: Normal distribution\"\nauthor: Michelle Arnetta and Tom Coleman\nabstract-title: Summary\nabstract: A factsheet for the normal distribution $N(\\mu,\\sigma^2)$.\nfilters: \n  - shinylive\nembed-resources: false\ncategories: \n  - Statistics\n---\n\n\n\n\n\n\n\n\n\n\n::: {.content-visible when-format=\"html\"}\n\n```{shinylive-r}\n#| standalone: true\n#| viewerHeight: 700\n\nlibrary(shiny)\nlibrary(bslib)\nlibrary(ggplot2)\n\nui <- page_fluid(\n  title = \"Normal distribution calculator\",\n  \n  layout_columns(\n    col_widths = c(4, 8),\n    \n    # Left column - Inputs\n    card(\n      card_header(\"Parameters\"),\n      card_body(\n        numericInput(\"mean\", \"Mean (μ):\", value = 0),\n        numericInput(\"sd\", \"Standard deviation (σ):\", value = 1, min = 0.01),\n        hr(),\n        radioButtons(\"prob_type\", \"Probability to calculate:\",\n                    choices = list(\"P(X ≤ x)\" = \"less\", \n                                  \"P(X ≥ x)\" = \"greater\", \n                                  \"P(x ≤ X ≤ y)\" = \"between\"),\n                    selected = \"less\"),\n        conditionalPanel(\n          condition = \"input.prob_type == 'less' || input.prob_type == 'greater'\",\n          numericInput(\"x_value\", \"x value:\", value = 0)\n        ),\n        conditionalPanel(\n          condition = \"input.prob_type == 'between'\",\n          numericInput(\"x_lower\", \"Lower bound (x):\", value = -1),\n          numericInput(\"x_upper\", \"Upper bound (y):\", value = 1)\n        )\n      )\n    ),\n    \n    # Right column - Plot\n    card(\n      card_header(\"Normal distribution plot\"),\n      card_body(\n        uiOutput(\"plot_title\"),\n        plotOutput(\"distPlot\", height = \"300px\")\n      )\n    )\n  ),\n  \n  # Bottom row - Results\n  card(\n    card_header(\"Results\"),\n    card_body(\n      # Removed the LaTeX formula display\n      textOutput(\"explanation\")\n    )\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  # Display the plot title with distribution parameters\n  output$plot_title <- renderUI({\n    title <- sprintf(\"N(μ = %.2f, σ = %.2f)\", input$mean, input$sd)\n    tags$h4(title, style = \"text-align: center; margin-bottom: 15px;\")\n  })\n  \n  # Calculate the probability based on user selection\n  probability <- reactive({\n    if (input$prob_type == \"less\") {\n      prob <- pnorm(input$x_value, mean = input$mean, sd = input$sd)\n      explanation <- sprintf(\"P(X ≤ %.2f) = %.4f or %.2f%%\", \n                            input$x_value, prob, prob * 100)\n      return(list(prob = prob, explanation = explanation, type = \"less\", x = input$x_value))\n      \n    } else if (input$prob_type == \"greater\") {\n      prob <- 1 - pnorm(input$x_value, mean = input$mean, sd = input$sd)\n      explanation <- sprintf(\"P(X ≥ %.2f) = %.4f or %.2f%%\", \n                            input$x_value, prob, prob * 100)\n      return(list(prob = prob, explanation = explanation, type = \"greater\", x = input$x_value))\n      \n    } else if (input$prob_type == \"between\") {\n      lower_prob <- pnorm(input$x_lower, mean = input$mean, sd = input$sd)\n      upper_prob <- pnorm(input$x_upper, mean = input$mean, sd = input$sd)\n      prob <- upper_prob - lower_prob\n      explanation <- sprintf(\"P(%.2f ≤ X ≤ %.2f) = %.4f or %.2f%%\", \n                            input$x_lower, input$x_upper, prob, prob * 100)\n      return(list(prob = prob, explanation = explanation, type = \"between\", \n                 lower = input$x_lower, upper = input$x_upper))\n    }\n  })\n  \n  # Display an explanation of the calculation\n  output$explanation <- renderText({\n    res <- probability()\n    return(res$explanation)\n  })\n  \n  # Generate the normal distribution plot\n  output$distPlot <- renderPlot({\n    # Calculate range for x-axis (covering 99.7% of the distribution)\n    x_min <- input$mean - 3.5 * input$sd\n    x_max <- input$mean + 3.5 * input$sd\n    \n    # Create data frame for plotting\n    x <- seq(x_min, x_max, length.out = 500)\n    y <- dnorm(x, mean = input$mean, sd = input$sd)\n    df <- data.frame(x = x, y = y)\n    \n    # Create base plot\n    p <- ggplot(df, aes(x = x, y = y)) +\n      geom_line() +\n      labs(x = \"X\", y = \"Density\") +\n      theme_minimal() +\n      theme(panel.grid.minor = element_blank())\n    \n    # Add bold line at X = 0\n    p <- p + geom_vline(xintercept = 0, linetype = \"solid\", color = \"black\", linewidth = 0.8)\n    \n    # Add shaded area based on selected probability type\n    res <- probability()\n    \n    if (res$type == \"less\") {\n      shade_x <- seq(x_min, res$x, length.out = 200)\n      shade_y <- dnorm(shade_x, mean = input$mean, sd = input$sd)\n      shade_df <- data.frame(x = shade_x, y = shade_y)\n      \n      p <- p + geom_area(data = shade_df, aes(x = x, y = y), fill = \"#3F6BB6\", alpha = 0.6) +\n        geom_vline(xintercept = res$x, linetype = \"dashed\", color = \"#db4315\")\n      \n    } else if (res$type == \"greater\") {\n      shade_x <- seq(res$x, x_max, length.out = 200)\n      shade_y <- dnorm(shade_x, mean = input$mean, sd = input$sd)\n      shade_df <- data.frame(x = shade_x, y = shade_y)\n      \n      p <- p + geom_area(data = shade_df, aes(x = x, y = y), fill = \"#3F6BB6\", alpha = 0.6) +\n        geom_vline(xintercept = res$x, linetype = \"dashed\", color = \"#db4315\")\n      \n    } else if (res$type == \"between\") {\n      shade_x <- seq(res$lower, res$upper, length.out = 200)\n      shade_y <- dnorm(shade_x, mean = input$mean, sd = input$sd)\n      shade_df <- data.frame(x = shade_x, y = shade_y)\n      \n      p <- p + geom_area(data = shade_df, aes(x = x, y = y), fill = \"#3F6BB6\", alpha = 0.6) +\n        geom_vline(xintercept = res$lower, linetype = \"dashed\", color = \"#db4315\") +\n        geom_vline(xintercept = res$upper, linetype = \"dashed\", color = \"#db4315\")\n    }\n    \n    return(p)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n```\n\n:::\n\n::: {.content-hidden when-format=\"html\"}\n\n![An example of the normal distribution with $\\mu = 0$ and $\\sigma = 1$.](./FiguresPNG/f-betadist.png){width=\"80%\"}\n\n:::\n\n**Where to use:** The normal distribution is used to model continuous random variables, which can include any positive or negative real values. The use of this distribution is often justified by the Central Limit Theorem: as the sample size increases, the distribution of sample means will resemble a normal distribution more and more closely.\n\n**Notation:** $X \\sim \\textrm{Normal}(\\mu,\\sigma^2)$ or $X \\sim N(\\mu,\\sigma^2)$\n\n**Parameters:** Two real numbers $\\mu$ and $\\sigma^2$.\n\n-   $\\mu$ is the centre of the distribution (the mean/expected value).\n-   $\\sigma^2$ is the measure of how the distribution is spread (the variance).\n\n| Quantity | Value | Notes |\n|:--------|:----------------------------|:-------------------|\n| **Mean** | $\\mathbb{E}(X) = \\mu$ |  |\n| **Variance** | $\\mathbb{V}(X) = \\sigma^2$ |  |\n| **PDF** | $\\mathbb{P}(X=x)=\\dfrac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp\\left({-\\dfrac{(x-\\mu)^2}{2\\sigma^2}}\\right)$ | $\\exp(y) = e^y$ |\n| **CDF** | $\\displaystyle\\mathbb{P}(X\\leq x)=\\dfrac{1}{2}\\left[1+\\textrm{erf}\\left(\\dfrac{x-\\mu}{\\sigma\\sqrt{2}}\\right)\\right]$ | $\\textrm{erf}(x)$ is the error function of $x$ |\n\n**Example:** The lengths of chocolate bars produced by Cantor’s Confectionery follow a normal distribution with a mean of $5.6$ inches and a variance of $1.44$. This can be expressed as $X \\sim N(5.6, 1.44)$, meaning the data is normally distributed, centered at $5.6$ with standard deviation $\\sqrt{1.44} = 1.2$.\n\n\n# Further reading {-}\n\nThis interactive element appears in [Guide: PMFs, PDFs, CDFs](../studyguides/pmfspdfscdfs.qmd) and [Overview: Probability distributions.](../overviews/o-distributions.qmd) Please click the relevant links to go to the guides.\n\n## Version history {-}\n\nv1.0: initial version created 04/25 by tdhc and Michelle Arnetta as part of a University of St Andrews VIP project.\n\n  - v1.1: moved to factsheet form and populated with material from [Overview: Probability distributions](../overviews/o-distributions.qmd) by tdhc.\n  \n[This work is licensed under CC BY-NC-SA 4.0.](https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1)\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}