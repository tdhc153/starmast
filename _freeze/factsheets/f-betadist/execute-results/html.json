{
  "hash": "221ef901365cdf3774214ae10b8e089e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Factsheet: Beta distribution\"\nauthor: Michelle Arnetta and Tom Coleman\nabstract-title: Summary\nabstract: A factsheet about the beta distribution.\nfilters: \n  - shinylive\nembed-resources: false\ncategories: \n  - Statistics\n---\n\n\n\n\n\n\n\n\n::: {.content-visible when-format=\"html\"}\n\n```{shinylive-r}\n#| standalone: true\n#| viewerHeight: 730\n\nlibrary(shiny)\nlibrary(bslib)\nlibrary(ggplot2)\n\nui <- page_fluid(\n  title = \"Beta distribution calculator\",\n  \n  layout_columns(\n    col_widths = c(4, 8),\n    \n    # Left column - Inputs\n    card(\n      card_header(\"Parameters\"),\n      card_body(\n        numericInput(\"shape1\", \"Shape parameter α:\", value = 2, min = 0.01, step = 0.1),\n        numericInput(\"shape2\", \"Shape parameter β:\", value = 2, min = 0.01, step = 0.1),\n        hr(),\n        radioButtons(\"prob_type\", \"Probability to calculate:\",\n                    choices = list(\"P(X ≤ x)\" = \"less\", \n                                  \"P(X ≥ x)\" = \"greater\", \n                                  \"P(x ≤ X ≤ y)\" = \"between\"),\n                    selected = \"less\"),\n        conditionalPanel(\n          condition = \"input.prob_type == 'less'\",\n          sliderInput(\"x_less\", \"x value:\", min = 0, max = 1, value = 0.5, step = 0.01)\n        ),\n        conditionalPanel(\n          condition = \"input.prob_type == 'greater'\",\n          sliderInput(\"x_greater\", \"x value:\", min = 0, max = 1, value = 0.5, step = 0.01)\n        ),\n        conditionalPanel(\n          condition = \"input.prob_type == 'between'\",\n          sliderInput(\"x_lower\", \"Lower bound (x):\", min = 0, max = 1, value = 0.25, step = 0.01),\n          sliderInput(\"x_upper\", \"Upper bound (y):\", min = 0, max = 1, value = 0.75, step = 0.01)\n        )\n      )\n    ),\n    \n    # Right column - Plot\n    card(\n      card_header(\"Beta distribution plot\"),\n      card_body(\n        uiOutput(\"plot_title\"),\n        plotOutput(\"distPlot\", height = \"300px\")\n      )\n    )\n  ),\n  \n  # Bottom row - Results\n  card(\n    card_header(\"Results\"),\n    card_body(\n      textOutput(\"explanation\")\n    )\n  )\n)\n\nserver <- function(input, output, session) {\n  \n  # Ensure that x_upper is always greater than or equal to x_lower\n  observe({\n    if (input$x_upper < input$x_lower) {\n      updateSliderInput(session, \"x_upper\", value = input$x_lower)\n    }\n  })\n  \n  # Display the plot title with distribution parameters\n  output$plot_title <- renderUI({\n    title <- sprintf(\"Beta(α = %.2f, β = %.2f)\", input$shape1, input$shape2)\n    tags$h4(title, style = \"text-align: center; margin-bottom: 15px;\")\n  })\n  \n  # Calculate the probability based on user selection\n  probability <- reactive({\n    if (input$prob_type == \"less\") {\n      prob <- pbeta(input$x_less, shape1 = input$shape1, shape2 = input$shape2)\n      explanation <- sprintf(\"P(X ≤ %.2f) = %.6f or %.4f%%\", \n                           input$x_less, prob, prob * 100)\n      return(list(prob = prob, explanation = explanation, type = \"less\", x = input$x_less))\n      \n    } else if (input$prob_type == \"greater\") {\n      prob <- 1 - pbeta(input$x_greater, shape1 = input$shape1, shape2 = input$shape2)\n      explanation <- sprintf(\"P(X ≥ %.2f) = %.6f or %.4f%%\", \n                           input$x_greater, prob, prob * 100)\n      return(list(prob = prob, explanation = explanation, type = \"greater\", x = input$x_greater))\n      \n    } else if (input$prob_type == \"between\") {\n      if (input$x_lower == input$x_upper) {\n        # For continuous distributions, P(X = a) = 0\n        prob <- 0\n      } else {\n        upper_prob <- pbeta(input$x_upper, shape1 = input$shape1, shape2 = input$shape2)\n        lower_prob <- pbeta(input$x_lower, shape1 = input$shape1, shape2 = input$shape2)\n        prob <- upper_prob - lower_prob\n      }\n      explanation <- sprintf(\"P(%.2f ≤ X ≤ %.2f) = %.6f or %.4f%%\", \n                           input$x_lower, input$x_upper, prob, prob * 100)\n      return(list(prob = prob, explanation = explanation, type = \"between\", \n                 lower = input$x_lower, upper = input$x_upper))\n    }\n  })\n  \n  # Display an explanation of the calculation\n  output$explanation <- renderText({\n    res <- probability()\n    return(res$explanation)\n  })\n  \n  # Generate the beta distribution plot\n  output$distPlot <- renderPlot({\n    # Get parameters\n    shape1 <- input$shape1\n    shape2 <- input$shape2\n    \n    # Create data frame for plotting\n    # Beta distribution is defined on the interval [0, 1]\n    x_values <- seq(0, 1, length.out = 500)\n    density_values <- dbeta(x_values, shape1 = shape1, shape2 = shape2)\n    plot_df <- data.frame(x = x_values, density = density_values)\n    \n    # Create base plot\n    p <- ggplot(plot_df, aes(x = x, y = density)) +\n      geom_line(size = 1, color = \"darkgray\") +\n      labs(x = \"X\", y = \"probability density function\") +\n      theme_minimal() +\n      theme(panel.grid.minor = element_blank()) +\n      xlim(0, 1) +\n      # Adjust y-limit based on maximum density to handle tall peaks\n      ylim(0, max(density_values) * 1.05)\n    \n    # Add shaded area based on selected probability type\n    res <- probability()\n    \n    if (res$type == \"less\") {\n      # Create data for the filled area\n      fill_x <- seq(0, res$x, length.out = 200)\n      fill_y <- dbeta(fill_x, shape1 = shape1, shape2 = shape2)\n      fill_df <- data.frame(x = fill_x, density = fill_y)\n      \n      p <- p + geom_area(data = fill_df, aes(x = x, y = density), \n                        fill = \"#3F6BB6\", alpha = 0.6)\n      \n    } else if (res$type == \"greater\") {\n      # Create data for the filled area\n      fill_x <- seq(res$x, 1, length.out = 200)\n      fill_y <- dbeta(fill_x, shape1 = shape1, shape2 = shape2)\n      fill_df <- data.frame(x = fill_x, density = fill_y)\n      \n      p <- p + geom_area(data = fill_df, aes(x = x, y = density), \n                        fill = \"#3F6BB6\", alpha = 0.6)\n      \n    } else if (res$type == \"between\") {\n      # Create data for the filled area\n      fill_x <- seq(res$lower, res$upper, length.out = 200)\n      fill_y <- dbeta(fill_x, shape1 = shape1, shape2 = shape2)\n      fill_df <- data.frame(x = fill_x, density = fill_y)\n      \n      p <- p + geom_area(data = fill_df, aes(x = x, y = density), \n                        fill = \"#3F6BB6\", alpha = 0.6)\n    }\n    \n    return(p)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n```\n\n:::\n\n::: {.content-hidden when-format=\"html\"}\n\n![An example of the beta distribution with $\\alpha = 1.5$ and $\\beta = 2.5$.](./FiguresPNG/f-betadist.png){width=\"80%\"}\n\n:::\n\n**Where to use:** The beta distribution is used to model the distribution of *probabilities* or proportions. Hence, the random variable $0 \\leq X \\leq 1$.\n\n**Notation:** $X \\sim \\textrm{Beta}(\\alpha,\\beta)$\n\n**Parameters:** Two positive real numbers $\\alpha,\\beta$, which are shape parameters. These can be specified as follows in terms of $n$ and $k$ where $n$ is the number of Bernoulli trials and $k$ is the number of successes:\n\n-   $\\alpha = k + 1$\n-   $\\beta = n - k + 1$\n\n| Quantity | Value | Notes |\n|:--------|:----------------------------|:-------------------|\n| **Mean** | $\\mathbb{E}(X) = \\dfrac{\\alpha}{\\alpha+\\beta}$ |  |\n| **Variance** | $\\mathbb{V}(X) = \\dfrac{\\alpha\\beta}{(\\alpha+\\beta)^2(\\alpha+\\beta+1)}$ |  |\n| **PDF** | $\\mathbb{P}(X=x)=\\dfrac{x^{\\alpha-1}(1-x)^{\\beta-1}}{\\textrm{B}(\\alpha,\\beta)}$ | $\\textrm{B}(x,y)$ is the beta function |\n| **CDF** | $\\mathbb{P}(X \\leq x)=I_{x}(\\alpha,\\beta)$ | $I_{x}(a,b)$ is the regularized incomplete beta function |\n\n**Example:** Cantor’s Confectionery is visited by 10 customers, and 6 of them purchase something from the store. Taking the buying customers as successes and the total visiting customers as number of trials, there would be 6 successes, allowing you to find the following parameters:\n\n-   $\\alpha = 6 + 1 = 7$\n\n-   $\\beta = 10 - 6 + 1 = 5$\n\nThen the distribution of the probabilities of a customer purchasing from Cantor’s Confectionery can be expressed as $X \\sim \\textrm{Beta}(7,5)$, meaning the first shape parameter is 7 and the second shape parameter is 5.\n\n# Further reading {-}\n\n[This interactive element appears in Overview: Probability distributions. Please click this link to go to the guide.](../overviews/o-distributions.qmd)\n\n## Version history {-}\n\nv1.0: initial version created 04/25 by tdhc and Michelle Arnetta as part of a University of St Andrews VIP project.\n\n  - v1.1: moved to factsheet form and populated with material from [Overview: Probability distributions](../overviews/o-distributions.qmd) by tdhc.\n  \n[This work is licensed under CC BY-NC-SA 4.0.](https://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1)\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}